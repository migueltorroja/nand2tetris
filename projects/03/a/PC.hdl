// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=reset,out=nreset);
    ALU(x=pcfeedback,zx=false,nx=true,zy=true,ny=inc,f=true,no=true,out=internalinc);
    Mux16(a=internalinc,b=in,sel=load,out=beforereset);
    And16(a=beforereset,
    b[0]=nreset,
    b[1]=nreset,
    b[2]=nreset,
    b[3]=nreset,
    b[4]=nreset,
    b[5]=nreset,
    b[6]=nreset,
    b[7]=nreset,
    b[8]=nreset,
    b[9]=nreset,
    b[10]=nreset,
    b[11]=nreset,
    b[12]=nreset,
    b[13]=nreset,
    b[14]=nreset,
    b[15]=nreset,
    out=registerin);
    Register(in=registerin,load=true,out=pcfeedback,out=out);
}
